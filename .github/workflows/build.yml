# Nombre del workflow
name: Build, Test and SonarCloud Analysis

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build-and-analyze:
    name: Build, Test and Analyze
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout del código
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2. Configuración de Java
      - name: Set up JDK 19
        uses: actions/setup-java@v4
        with:
          java-version: '19'
          distribution: 'temurin'
          cache: maven

      # 3. Cache para las dependencias de SonarCloud
      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      # 4. Construir, Probar y Analizar con SonarCloud
      - name: Build, Test and Analyze with SonarCloud
        env:
          # Se definen las variables de entorno para este paso
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }} # <--- AQUÍ SE USA EL SECRETO
        # El comando -Dsonar.token ya no es necesario porque el plugin
        # busca automáticamente la variable de entorno SONAR_TOKEN.
        run: mvn -B clean verify sonar:sonar