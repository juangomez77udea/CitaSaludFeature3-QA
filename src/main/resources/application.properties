# ==================================================
#  CONFIGURACION PRINCIPAL DE LA APLICACION
# ==================================================
spring.application.name=backend
server.port=${PORT:8080}

# ==================================================
#  CONFIGURACION DE LA BASE DE DATOS (DataSource)
# ==================================================
# En Render, se usarán las variables de entorno spring.datasource.*.
# Para desarrollo local, usará los valores por defecto que apuntan a Docker.
spring.datasource.url=${spring.datasource.url:jdbc:postgresql://localhost:5432/cita_salud_local}
spring.datasource.username=${spring.datasource.username:postgres}
spring.datasource.password=${spring.datasource.password:N2M2XB7EwxWgJoU6qkKQhYtCtt3SmqRN}

# ==================================================
#  CONFIGURACION DE JPA / HIBERNATE
# ==================================================
# Usamos 'update' como una estrategia segura tanto para desarrollo como para producción.
# En el primer despliegue en Render, creará las tablas.
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# ==================================================
#  CONFIGURACION DE SEGURIDAD (JWT)
# ==================================================
app.jwt-secret=${JWT_SECRET:jkivU98HKkQUzbQq2vjCz+HyKNtkqAsyuyfVr4KF6W/DIEHj9NBx44+PUeuvc3kRY6Yjk84U8IURFgHSl+UuLg==}
app.jwt-expiration-milliseconds=${JWT_EXPIRATION:86400000}

# ==================================================
#  CONFIGURACION DE ACTUATOR Y DOCUMENTACION API
# ==================================================
management.endpoints.web.exposure.include=*
springdoc.api-docs.path=/api-docs